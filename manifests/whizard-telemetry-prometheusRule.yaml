apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/name: whizard-telemetry
    app.kubernetes.io/part-of: whizard-telemetry
    prometheus: k8s
    role: alert-rules
  name: whizard-telemetry-rules
  namespace: monitoring
spec:
  groups:
  - name: kubernetes-apps
    rules:
    - alert: KubePodCrashLooping
      annotations:
        description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is in waiting state (reason: "CrashLoopBackOff").'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/kubepodcrashlooping
        summary: Pod is crash looping.
      expr: |
        max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="kube-state-metrics"}[5m]) >= 1
      for: 15m
      labels:
        severity: warning
  - name: whizard-telemetry-custom.rules
    rules:
    - expr: |
        max by (cluster, node, workspace, namespace, pod, qos_class, workload, workload_type, role, host_ip) (
                kube_pod_info * on (cluster, namespace) group_left (workspace) (kube_namespace_labels)
              * on (cluster, namespace, pod) group_left (workload, workload_type)
                (
                    label_join(
                      label_join(
                        kube_pod_owner{owner_kind!~"ReplicaSet|DaemonSet|StatefulSet|Job"},
                        "workload",
                        "$1",
                        "owner_kind"
                      ),
                      "workload_type",
                      "$1",
                      "owner_name"
                    )
                  or
                      kube_pod_owner{owner_kind=~"ReplicaSet|DaemonSet|StatefulSet|Job"}
                    * on (namespace, pod) group_left (workload_type, workload)
                      namespace_workload_pod:kube_pod_owner:relabel
                )
            * on (cluster, namespace, pod) group_left (qos_class)
              (kube_pod_status_qos_class > 0)
          * on (cluster, node) group_left (role)
            (
                (kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"})
              or
                kube_node_role{role="control-plane"}
            )
        )
      record: 'workspace_workload_node:kube_pod_info:'
  - name: whizard-telemetry-node-recording.rules
    rules:
    - expr: |
        node:node_memory_bytes_used_total:sum / node:node_memory_bytes_total:sum
      record: node:node_memory_utilisation:ratio
    - expr: |
        sum by (cluster, node, instance, host_ip)(node_memory_MemTotal_bytes{job="node-exporter"} -(node_memory_MemAvailable_bytes{job="node-exporter"} or (node_memory_Buffers_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Slab_bytes{job="node-exporter"}))) * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"})
      record: node:node_memory_bytes_used_total:sum
    - expr: |
        sum by (cluster, node, instance, host_ip, role)(node_memory_MemTotal_bytes{job="node-exporter"} * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"}))
      record: node:node_memory_bytes_total:sum
    - expr: |
        node:node_filesystem_bytes_used_total:sum / node:node_filesystem_bytes_total:sum
      record: node:node_filesystem_utilisation:ratio
    - expr: |
        sum by (cluster, node, instance, host_ip, role) (
          max by (cluster, node, instance, host_ip, device) (
              node_filesystem_size_bytes{device=~"/dev/.*",device!~"/dev/loop\\d+", job="node-exporter"} -
              node_filesystem_avail_bytes{device=~"/dev/.*",device!~"/dev/loop\\d+", job="node-exporter"}
          ) * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"})
        )
      record: node:node_filesystem_bytes_used_total:sum
    - expr: |
        sum by (cluster, node, instance, host_ip, role) (
          max by (cluster, node, instance, host_ip, device) (
              node_filesystem_size_bytes{device=~"/dev/.*",device!~"/dev/loop\\d+", job="node-exporter"}
          ) * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"})
        )
      record: node:node_filesystem_bytes_total:sum
    - expr: |
        node:node_pod_total:sum / node:node_pod_quota:sum
      record: node:node_pod_utilisation:ratio
    - expr: |
        sum by(cluster,node,host_ip,role)(kube_pod_status_scheduled{job="kube-state-metrics", condition="true"} * on(cluster,namespace,pod) group_left(node,host_ip,role) workspace_workload_node:kube_pod_info:)
      record: node:node_pod_total:sum
    - expr: |
        sum by (cluster,node,host_ip,role)(kube_node_status_allocatable{resource="pods"} * on (cluster, node) (kube_node_status_condition{condition="Ready",status="true"}) * on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""}))
      record: node:node_pod_quota:sum
    - expr: |
        sum by (cluster,node)(node_load1 / on(cluster,node) node:node_num_cpu:sum) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_load1_per_cpu:ratio
    - expr: |
        sum by (cluster,node)(node_load5 / on(cluster,node) node:node_num_cpu:sum) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_load5_per_cpu:ratio
    - expr: |
        sum by (cluster,node)(node_load15 / on(cluster,node) node:node_num_cpu:sum) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_load15_per_cpu:ratio
  - name: apiserver.rules
    rules:
    - expr: |
        sum by(cluster) (irate(apiserver_request_total{job="apiserver"}[5m]))
      record: apiserver:apiserver_request_total:sum_irate
    - expr: |
        sum(irate(apiserver_request_total{job="apiserver"}[5m])) by (verb, cluster)
      record: apiserver:apiserver_request_total:sum_verb_irate
    - expr: |
        sum by(cluster) (irate(apiserver_request_duration_seconds_sum{job="apiserver",subresource!="log", verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) / sum by(cluster) (irate(apiserver_request_duration_seconds_count{job="apiserver", subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m]))
      record: apiserver:apiserver_request_duration:avg
    - expr: |
        sum(irate(apiserver_request_duration_seconds_sum{job="apiserver",subresource!="log", verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) by (verb, cluster) / sum(irate(apiserver_request_duration_seconds_count{job="apiserver", subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) by (verb, cluster)
      record: apiserver:apiserver_request_duration:avg_by_verb
